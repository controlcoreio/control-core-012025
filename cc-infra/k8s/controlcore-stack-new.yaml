# ControlCore Stack - Updated Architecture (Complete)
# This file contains all ControlCore services including new architecture with cc-bouncer, cc-opal, cc-db
# 
# Usage:
#   kubectl apply -f controlcore-stack-new.yaml
#   
# Access:
#   Frontend:            http://localhost:7600
#   PAP API:             http://localhost:8082
#   Bouncer:             http://localhost:8080
#   OPAL Server:         http://localhost:7000
#   Database:            localhost:5432

---
# Control Core Database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cc-db
  labels:
    app: cc-db
    stack: controlcore-stack
    env: local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cc-db
      stack: controlcore-stack
      env: local-dev
  template:
    metadata:
      labels:
        app: cc-db
        stack: controlcore-stack
        env: local-dev
    spec:
      containers:
        - name: cc-db
          image: postgres:15
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "control_core_db"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "password"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 30
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: cc-db
  labels:
    stack: controlcore-stack
    env: local-dev
spec:
  selector:
    app: cc-db
    stack: controlcore-stack
    env: local-dev
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30432
  type: NodePort

---
# OPAL Server for Policy Synchronization
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cc-opal
  labels:
    app: cc-opal
    stack: controlcore-stack
    env: local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cc-opal
      stack: controlcore-stack
      env: local-dev
  template:
    metadata:
      labels:
        app: cc-opal
        stack: controlcore-stack
        env: local-dev
    spec:
      containers:
        - name: cc-opal
          image: permitio/opal-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7000
          env:
            - name: OPAL_POLICY_REPO_URL
              value: "https://$(GITHUB_TOKEN)@github.com/controlcoreio/staging-policies-repo.git"
            - name: OPAL_DATA_SOURCES_CONFIG
              value: "./config/data-sources.json"
            - name: PAP_API_URL
              value: "http://cc-pap:8082"
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cc-opal-github-token
                  key: token
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            tcpSocket:
              port: 7000
            initialDelaySeconds: 10
            periodSeconds: 30
          livenessProbe:
            tcpSocket:
              port: 7000
            initialDelaySeconds: 30
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: cc-opal
  labels:
    stack: controlcore-stack
    env: local-dev
spec:
  selector:
    app: cc-opal
    stack: controlcore-stack
    env: local-dev
  ports:
    - port: 7000
      targetPort: 7000
      nodePort: 30700
  type: NodePort

---
# Control Core PAP API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cc-pap
  labels:
    app: cc-pap
    stack: controlcore-stack
    env: local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cc-pap
      stack: controlcore-stack
      env: local-dev
  template:
    metadata:
      labels:
        app: cc-pap
        stack: controlcore-stack
        env: local-dev
    spec:
      containers:
        - name: cc-pap
          image: cc-pap-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
          env:
            - name: PORT
              value: "8082"
            - name: DATABASE_URL
              value: "postgresql://postgres:password@cc-db:5432/control_core_db"
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cc-pap-github-token
                  key: token
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          startupProbe:
            httpGet:
              path: /api/v1/policies
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 12
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /api/v1/policies
              port: 8082
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /api/v1/policies
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: cc-pap
  labels:
    stack: controlcore-stack
    env: local-dev
spec:
  selector:
    app: cc-pap
    stack: controlcore-stack
    env: local-dev
  ports:
    - port: 8082
      targetPort: 8082
      nodePort: 30802
  type: NodePort
---
# PAP API HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cc-pap-hpa
  labels:
    app: cc-pap
    stack: controlcore-stack
    env: local-dev
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cc-pap
  minReplicas: 1
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15

---
# Control Core Bouncer (PEP)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cc-bouncer
  labels:
    app: cc-bouncer
    stack: controlcore-stack
    env: local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cc-bouncer
      stack: controlcore-stack
      env: local-dev
  template:
    metadata:
      labels:
        app: cc-bouncer
        stack: controlcore-stack
        env: local-dev
    spec:
      containers:
        - name: cc-bouncer
          image: cc-bouncer:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: BOUNCER_PORT
              value: "8080"
            - name: TARGET_HOST
              value: "localhost:8000"
            - name: PAP_API_URL
              value: "http://cc-pap:8082"
            - name: OPAL_SERVER_URL
              value: "http://cc-opal:7000"
            - name: TENANT_ID
              value: "default"
            - name: API_KEY
              value: "your-api-key-here"
            - name: LOG_ENABLED
              value: "true"
            - name: CACHE_ENABLED
              value: "true"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: cc-bouncer
  labels:
    stack: controlcore-stack
    env: local-dev
spec:
  selector:
    app: cc-bouncer
    stack: controlcore-stack
    env: local-dev
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30800
  type: NodePort
---
# Bouncer HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cc-bouncer-hpa
  labels:
    app: cc-bouncer
    stack: controlcore-stack
    env: local-dev
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cc-bouncer
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15

---
# Control Core Frontend with Auto-scaling
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cc-frontend
  labels:
    app: cc-frontend
    stack: controlcore-stack
    env: local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cc-frontend
      stack: controlcore-stack
      env: local-dev
  template:
    metadata:
      labels:
        app: cc-frontend
        stack: controlcore-stack
        env: local-dev
    spec:
      containers:
        - name: cc-frontend
          image: cc-frontend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: POLICY_SERVICE_URL
              value: "http://cc-pap:8082/api/v1"
            - name: REGAL_LSP_URL  
              value: "ws://cc-regal-service:4389"
            - name: METRICS_ENABLED
              value: "true"
            - name: METRICS_PORT
              value: "9090"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
---
# Frontend HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cc-frontend-hpa
  labels:
    app: cc-frontend
    stack: controlcore-stack
    env: local-dev
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cc-frontend
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: cc-frontend
  labels:
    stack: controlcore-stack
    env: local-dev
spec:
  selector:
    app: cc-frontend
    stack: controlcore-stack
    env: local-dev
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30300
  type: NodePort
