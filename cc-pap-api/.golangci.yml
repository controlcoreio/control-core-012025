# Options for analysis running
run:
  # Timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # Include test files or not, default is true
  tests: true

  # Default concurrency is a available CPU number
  concurrency: 4

  # Skip files with build tags
  skip-files:
    - ".*\\.pb\\.go$"

# Output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: colored-line-number

  # Print lines of code with issue, default is true
  print-issued-lines: true

  # Print linter name in the end of issue text, default is true
  print-linter-name: true

# All available settings of specific linters
linters-settings:
  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    check-type-assertions: true

  govet:
    # Report about shadowed variables
    check-shadowing: true

  gocyclo:
    # Minimal code complexity to report, 30 by default
    min-complexity: 15

  dupl:
    # Tokens count to trigger issue, 150 by default
    threshold: 100

  goconst:
    # Minimal length of string constant, 3 by default
    min-len: 3
    # Minimal occurrences count to trigger, 3 by default
    min-occurrences: 3

  misspell:
    # Correct spellings using locale preferences for US or UK.
    locale: US

  lll:
    # Max line length, lines longer will be reported. Default is 120.
    line-length: 120

  unused:
    # Treat code as a program (not a library) and report unused exported identifiers
    check-exported: false

  unparam:
    # Inspect exported functions, default is false
    check-exported: false

# Enable specific linters
linters:
  disable-all: true
  enable:
    - errcheck     # Detect unchecked errors
    - gosimple     # Simplify code
    - govet        # Examine Go source code and reports suspicious constructs
    - ineffassign  # Detect when assignments to existing variables are not used
    - staticcheck  # Go static analysis
    - typecheck    # Like the front-end of a Go compiler
    - unused       # Check for unused constants, variables, functions and types
    - gocyclo      # Computes and checks the cyclomatic complexity of functions
    - gosec        # Inspects source code for security problems
    - misspell     # Finds commonly misspelled English words in comments
    - gofmt        # Checks whether code was gofmt-ed
    - goimports    # Checks imports are formatted according to goimports
    - revive       # Fast, configurable, extensible, flexible, and beautiful linter for Go

# Issues configuration
issues:
  # Maximum count of issues with the same text
  max-same-issues: 3

  # Maximum issues count per one linter
  max-issues-per-linter: 50

  # Set default severity to "warning" to make linting errors appear as warnings
  severity: warning

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - dupl
        - gosec
